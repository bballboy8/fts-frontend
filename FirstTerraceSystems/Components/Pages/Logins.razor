@page "/"
@page "/login"

@using System.ComponentModel.DataAnnotations
@using FirstTerraceSystems.Entities
@using FirstTerraceSystems.Features
@using FirstTerraceSystems.Models
@using FirstTerraceSystems.Components
@using FirstTerraceSystems.Services.IServices

@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager
@inject WindowsSerivce WindowsSerivce
@inject BsToastService Toast

<CloseButton />

<div class="signIn">
    <div class="row g-0 justify-content-center">
        <div class="col-6 col-xl-5">
            <div class="login-content">
                <img src="../images/logo.png" Alt="logo" class="logo" />
                <EditForm Model="@_loginDto" OnValidSubmit="HandleValidSubmit" autocomplete="off" aria-autocomplete="none">
                    <DataAnnotationsValidator />

                    <div class="login-input">
                        <InputText id="email" class="mb-3 mb-xl-4" @bind-Value="_loginDto.Email" autocomplete="off" aria-autocomplete="none" placeholder="Email" />
                        <ValidationMessage For="@(() => _loginDto.Email)" />
                    </div>
                    <div class="login-input password-input">
                        <InputText id="password" type="password" class="mb-3 mb-xl-4 txt-password-input" @bind-Value="_loginDto.Password" placeholder="Password" autocomplete="new-password" aria-autocomplete="none" />
                        <i class="password-toggle bi bi-eye"></i>
                        <ValidationMessage For="@(() => _loginDto.Password)" />
                    </div>

                    <button class="login-btn create-new" type="Submit">Sign in</button>
                    <button type="button" class="login-btn create-new sign-in-down" @onclick="@(() => NavigationManager.NavigateTo("/register"))">I don't have an account, create one</button>
                    <span class="separator">OR</span>
                    <button type="button" class="social-media mb-4"><img src="../images/devicon_google.png" alt="devivon_google" />Continue using Google ID</button>
                    <button type="button" class="social-media tab-to-close-app"><img src="../images/apple.png" alt="apple" />Continue using Apple ID</button>
                </EditForm>
            </div>
        </div>
        <div class="col-6 col-xl-7">
            <div class="login-image">
                <img src="../images/login-bg.png" Alt="login-bg" class="login-img" />
            </div>
        </div>
    </div>
</div>

@code {
    private LoginDto _loginDto = new LoginDto();

    protected override void OnInitialized()
    {
        WindowsSerivce.LockWindowResize();
        base.OnInitialized();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("removeUnusedElement");
    }

    private async Task HandleValidSubmit()
    {
        var result = await AuthenticationService.Login(_loginDto);
        if (!string.IsNullOrEmpty(result.Detail))
        {
            Toast.ShowDangerMessage(result.Detail == "User not found" ? "Invalid Username or Password" : result.Detail);
        }
        else
        {
            WindowsSerivce.UnlockWindowResize();
            // WebSocketClientConnection.NavigationManager = NavigationManager;            
            NavigationManager.NavigateTo("/multiChats");
        }
    }

    private void Register()
    {
        // Handle the registration process
        NavigationManager.NavigateTo("/register");
    }

    private void LoginWithApple()
    {
        // Handle Apple login
    }

    private void LoginWithGoogle()
    {
        // Handle Google login
    }
    
}
