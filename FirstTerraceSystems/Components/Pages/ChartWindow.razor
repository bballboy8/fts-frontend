@inject IJSRuntime JSRuntime
@inject StateContainerService StateContainer

<div @ref="ER_ChartWindow"></div>

@code {


    [Parameter]
    public object? ChartIndx { get; set; }

    [Parameter]
    public object? OhlcData { get; set; }

    [Parameter]
    public object? VolumeData { get; set; }

    [Parameter]
    public object? GroupingUnits { get; set; }

    private ElementReference ER_ChartWindow { get; set; }

    protected override void OnInitialized()
    {
        StateContainerService.AddChartPage(new Models.ChartPageModal { ChartId = ChartIndx?.ToString(), JSRuntime = JSRuntime });
        base.OnInitialized();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("changeBackgroundColor", StateContainerService.IsDarkMode);
            await JSRuntime.InvokeVoidAsync("popoutChartWindow", ER_ChartWindow, ChartIndx, OhlcData, VolumeData, GroupingUnits);
        }
    }
}