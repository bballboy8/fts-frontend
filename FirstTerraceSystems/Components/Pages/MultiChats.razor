@page "/multiChats"
@using FirstTerraceSystems.Entities.Nasdaq
@inject NsdaqService NsdaqService
@inject IJSRuntime JSRuntime

<div class="container-fluid">
    <div id="chartList" class="row"></div>
</div>

@code {
    private string? FirstSymbol { get; set; }
    private IEnumerable<EquitiesBarModal>? FirstSymbolData { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Fetch the symbols from the API
        var symbolsResponse = await NsdaqService.GetSymbols();
        if (symbolsResponse == null)
        {
            Console.WriteLine("Failed to fetch symbols.");
            return;
        }

        // Get the first symbol
        FirstSymbol = symbolsResponse.FirstOrDefault()?.Symbol;
        if (string.IsNullOrEmpty(FirstSymbol))
        {
            Console.WriteLine("No symbols available.");
            return;
        }

        Console.WriteLine($"FirstSymbol: {FirstSymbol}");

        var currentDate = DateTime.Now;
        var startDate = currentDate.AddDays(-3);
        startDate = new DateTime(startDate.Year, startDate.Month, startDate.Day, 9, 0, 0);

        // Fetch data for the first symbol
        FirstSymbolData = await NsdaqService.GetEquitiesBars(startDate, FirstSymbol);
        if (FirstSymbolData == null)
        {
            Console.WriteLine($"Failed to fetch data for symbol: {FirstSymbol}");
        }

        Console.WriteLine($"FirstSymbolData: {FirstSymbolData}");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && FirstSymbolData != null)
        {
            await JSRuntime.InvokeVoidAsync("LoadData", FirstSymbolData);
            await JSRuntime.InvokeVoidAsync("addChartBoxForSymbol", FirstSymbolData, FirstSymbol);
        }
    }
}